/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthenticatedReportsRouteImport } from './routes/_authenticated/reports'
import { Route as AuthenticatedDiscountsRouteImport } from './routes/_authenticated/discounts'
import { Route as AuthenticatedBranchesRouteImport } from './routes/_authenticated/branches'
import { Route as AuthSignUpRouteImport } from './routes/_auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/_auth/sign-in'
import { Route as AuthOtpRouteImport } from './routes/_auth/otp'
import { Route as AuthNewPasswordRouteImport } from './routes/_auth/new-password'
import { Route as AuthForgotRouteImport } from './routes/_auth/forgot'
import { Route as publicTermsRouteImport } from './routes/(public)/terms'
import { Route as publicPrivacyRouteImport } from './routes/(public)/privacy'
import { Route as publicHelpRouteImport } from './routes/(public)/help'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as AuthenticatedUsersIndexRouteImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedSalesIndexRouteImport } from './routes/_authenticated/sales/index'
import { Route as AuthenticatedProductsIndexRouteImport } from './routes/_authenticated/products/index'
import { Route as AuthenticatedUsersSegmentRouteImport } from './routes/_authenticated/users/segment'
import { Route as AuthenticatedUsersMessageRouteImport } from './routes/_authenticated/users/message'
import { Route as AuthenticatedSettingsProfileRouteImport } from './routes/_authenticated/settings/profile'
import { Route as AuthenticatedSettingsPaymentMethodsRouteImport } from './routes/_authenticated/settings/payment-methods'
import { Route as AuthenticatedSettingsPaymentRouteImport } from './routes/_authenticated/settings/payment'
import { Route as AuthenticatedSettingsEmployeesRouteImport } from './routes/_authenticated/settings/employees'
import { Route as AuthenticatedSettingsDeliveriesRouteImport } from './routes/_authenticated/settings/deliveries'
import { Route as AuthenticatedSalesRefundRouteImport } from './routes/_authenticated/sales/refund'
import { Route as AuthenticatedProductsStockCountRouteImport } from './routes/_authenticated/products/stock-count'
import { Route as AuthenticatedProductsStockRouteImport } from './routes/_authenticated/products/stock'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedReportsRoute = AuthenticatedReportsRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedDiscountsRoute = AuthenticatedDiscountsRouteImport.update({
  id: '/discounts',
  path: '/discounts',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedBranchesRoute = AuthenticatedBranchesRouteImport.update({
  id: '/branches',
  path: '/branches',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthOtpRoute = AuthOtpRouteImport.update({
  id: '/otp',
  path: '/otp',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthNewPasswordRoute = AuthNewPasswordRouteImport.update({
  id: '/new-password',
  path: '/new-password',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthForgotRoute = AuthForgotRouteImport.update({
  id: '/forgot',
  path: '/forgot',
  getParentRoute: () => AuthRouteRoute,
} as any)
const publicTermsRoute = publicTermsRouteImport.update({
  id: '/(public)/terms',
  path: '/terms',
  getParentRoute: () => rootRouteImport,
} as any)
const publicPrivacyRoute = publicPrivacyRouteImport.update({
  id: '/(public)/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const publicHelpRoute = publicHelpRouteImport.update({
  id: '/(public)/help',
  path: '/help',
  getParentRoute: () => rootRouteImport,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedSalesIndexRoute = AuthenticatedSalesIndexRouteImport.update({
  id: '/sales/',
  path: '/sales/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedProductsIndexRoute =
  AuthenticatedProductsIndexRouteImport.update({
    id: '/products/',
    path: '/products/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedUsersSegmentRoute =
  AuthenticatedUsersSegmentRouteImport.update({
    id: '/users/segment',
    path: '/users/segment',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedUsersMessageRoute =
  AuthenticatedUsersMessageRouteImport.update({
    id: '/users/message',
    path: '/users/message',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsProfileRoute =
  AuthenticatedSettingsProfileRouteImport.update({
    id: '/settings/profile',
    path: '/settings/profile',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsPaymentMethodsRoute =
  AuthenticatedSettingsPaymentMethodsRouteImport.update({
    id: '/settings/payment-methods',
    path: '/settings/payment-methods',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsPaymentRoute =
  AuthenticatedSettingsPaymentRouteImport.update({
    id: '/settings/payment',
    path: '/settings/payment',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsEmployeesRoute =
  AuthenticatedSettingsEmployeesRouteImport.update({
    id: '/settings/employees',
    path: '/settings/employees',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsDeliveriesRoute =
  AuthenticatedSettingsDeliveriesRouteImport.update({
    id: '/settings/deliveries',
    path: '/settings/deliveries',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSalesRefundRoute =
  AuthenticatedSalesRefundRouteImport.update({
    id: '/sales/refund',
    path: '/sales/refund',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProductsStockCountRoute =
  AuthenticatedProductsStockCountRouteImport.update({
    id: '/products/stock-count',
    path: '/products/stock-count',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProductsStockRoute =
  AuthenticatedProductsStockRouteImport.update({
    id: '/products/stock',
    path: '/products/stock',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/help': typeof publicHelpRoute
  '/privacy': typeof publicPrivacyRoute
  '/terms': typeof publicTermsRoute
  '/forgot': typeof AuthForgotRoute
  '/new-password': typeof AuthNewPasswordRoute
  '/otp': typeof AuthOtpRoute
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/branches': typeof AuthenticatedBranchesRoute
  '/discounts': typeof AuthenticatedDiscountsRoute
  '/reports': typeof AuthenticatedReportsRoute
  '/': typeof AuthenticatedIndexRoute
  '/products/stock': typeof AuthenticatedProductsStockRoute
  '/products/stock-count': typeof AuthenticatedProductsStockCountRoute
  '/sales/refund': typeof AuthenticatedSalesRefundRoute
  '/settings/deliveries': typeof AuthenticatedSettingsDeliveriesRoute
  '/settings/employees': typeof AuthenticatedSettingsEmployeesRoute
  '/settings/payment': typeof AuthenticatedSettingsPaymentRoute
  '/settings/payment-methods': typeof AuthenticatedSettingsPaymentMethodsRoute
  '/settings/profile': typeof AuthenticatedSettingsProfileRoute
  '/users/message': typeof AuthenticatedUsersMessageRoute
  '/users/segment': typeof AuthenticatedUsersSegmentRoute
  '/products': typeof AuthenticatedProductsIndexRoute
  '/sales': typeof AuthenticatedSalesIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
}
export interface FileRoutesByTo {
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/help': typeof publicHelpRoute
  '/privacy': typeof publicPrivacyRoute
  '/terms': typeof publicTermsRoute
  '/forgot': typeof AuthForgotRoute
  '/new-password': typeof AuthNewPasswordRoute
  '/otp': typeof AuthOtpRoute
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/branches': typeof AuthenticatedBranchesRoute
  '/discounts': typeof AuthenticatedDiscountsRoute
  '/reports': typeof AuthenticatedReportsRoute
  '/': typeof AuthenticatedIndexRoute
  '/products/stock': typeof AuthenticatedProductsStockRoute
  '/products/stock-count': typeof AuthenticatedProductsStockCountRoute
  '/sales/refund': typeof AuthenticatedSalesRefundRoute
  '/settings/deliveries': typeof AuthenticatedSettingsDeliveriesRoute
  '/settings/employees': typeof AuthenticatedSettingsEmployeesRoute
  '/settings/payment': typeof AuthenticatedSettingsPaymentRoute
  '/settings/payment-methods': typeof AuthenticatedSettingsPaymentMethodsRoute
  '/settings/profile': typeof AuthenticatedSettingsProfileRoute
  '/users/message': typeof AuthenticatedUsersMessageRoute
  '/users/segment': typeof AuthenticatedUsersSegmentRoute
  '/products': typeof AuthenticatedProductsIndexRoute
  '/sales': typeof AuthenticatedSalesIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/(public)/help': typeof publicHelpRoute
  '/(public)/privacy': typeof publicPrivacyRoute
  '/(public)/terms': typeof publicTermsRoute
  '/_auth/forgot': typeof AuthForgotRoute
  '/_auth/new-password': typeof AuthNewPasswordRoute
  '/_auth/otp': typeof AuthOtpRoute
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_auth/sign-up': typeof AuthSignUpRoute
  '/_authenticated/branches': typeof AuthenticatedBranchesRoute
  '/_authenticated/discounts': typeof AuthenticatedDiscountsRoute
  '/_authenticated/reports': typeof AuthenticatedReportsRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/products/stock': typeof AuthenticatedProductsStockRoute
  '/_authenticated/products/stock-count': typeof AuthenticatedProductsStockCountRoute
  '/_authenticated/sales/refund': typeof AuthenticatedSalesRefundRoute
  '/_authenticated/settings/deliveries': typeof AuthenticatedSettingsDeliveriesRoute
  '/_authenticated/settings/employees': typeof AuthenticatedSettingsEmployeesRoute
  '/_authenticated/settings/payment': typeof AuthenticatedSettingsPaymentRoute
  '/_authenticated/settings/payment-methods': typeof AuthenticatedSettingsPaymentMethodsRoute
  '/_authenticated/settings/profile': typeof AuthenticatedSettingsProfileRoute
  '/_authenticated/users/message': typeof AuthenticatedUsersMessageRoute
  '/_authenticated/users/segment': typeof AuthenticatedUsersSegmentRoute
  '/_authenticated/products/': typeof AuthenticatedProductsIndexRoute
  '/_authenticated/sales/': typeof AuthenticatedSalesIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/help'
    | '/privacy'
    | '/terms'
    | '/forgot'
    | '/new-password'
    | '/otp'
    | '/sign-in'
    | '/sign-up'
    | '/branches'
    | '/discounts'
    | '/reports'
    | '/'
    | '/products/stock'
    | '/products/stock-count'
    | '/sales/refund'
    | '/settings/deliveries'
    | '/settings/employees'
    | '/settings/payment'
    | '/settings/payment-methods'
    | '/settings/profile'
    | '/users/message'
    | '/users/segment'
    | '/products'
    | '/sales'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/help'
    | '/privacy'
    | '/terms'
    | '/forgot'
    | '/new-password'
    | '/otp'
    | '/sign-in'
    | '/sign-up'
    | '/branches'
    | '/discounts'
    | '/reports'
    | '/'
    | '/products/stock'
    | '/products/stock-count'
    | '/sales/refund'
    | '/settings/deliveries'
    | '/settings/employees'
    | '/settings/payment'
    | '/settings/payment-methods'
    | '/settings/profile'
    | '/users/message'
    | '/users/segment'
    | '/products'
    | '/sales'
    | '/users'
  id:
    | '__root__'
    | '/_auth'
    | '/_authenticated'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/(public)/help'
    | '/(public)/privacy'
    | '/(public)/terms'
    | '/_auth/forgot'
    | '/_auth/new-password'
    | '/_auth/otp'
    | '/_auth/sign-in'
    | '/_auth/sign-up'
    | '/_authenticated/branches'
    | '/_authenticated/discounts'
    | '/_authenticated/reports'
    | '/_authenticated/'
    | '/_authenticated/products/stock'
    | '/_authenticated/products/stock-count'
    | '/_authenticated/sales/refund'
    | '/_authenticated/settings/deliveries'
    | '/_authenticated/settings/employees'
    | '/_authenticated/settings/payment'
    | '/_authenticated/settings/payment-methods'
    | '/_authenticated/settings/profile'
    | '/_authenticated/users/message'
    | '/_authenticated/users/segment'
    | '/_authenticated/products/'
    | '/_authenticated/sales/'
    | '/_authenticated/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  publicHelpRoute: typeof publicHelpRoute
  publicPrivacyRoute: typeof publicPrivacyRoute
  publicTermsRoute: typeof publicTermsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/reports': {
      id: '/_authenticated/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof AuthenticatedReportsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/discounts': {
      id: '/_authenticated/discounts'
      path: '/discounts'
      fullPath: '/discounts'
      preLoaderRoute: typeof AuthenticatedDiscountsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/branches': {
      id: '/_authenticated/branches'
      path: '/branches'
      fullPath: '/branches'
      preLoaderRoute: typeof AuthenticatedBranchesRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/otp': {
      id: '/_auth/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof AuthOtpRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/new-password': {
      id: '/_auth/new-password'
      path: '/new-password'
      fullPath: '/new-password'
      preLoaderRoute: typeof AuthNewPasswordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/forgot': {
      id: '/_auth/forgot'
      path: '/forgot'
      fullPath: '/forgot'
      preLoaderRoute: typeof AuthForgotRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/(public)/terms': {
      id: '/(public)/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof publicTermsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/privacy': {
      id: '/(public)/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof publicPrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/help': {
      id: '/(public)/help'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof publicHelpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/sales/': {
      id: '/_authenticated/sales/'
      path: '/sales'
      fullPath: '/sales'
      preLoaderRoute: typeof AuthenticatedSalesIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/products/': {
      id: '/_authenticated/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AuthenticatedProductsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/users/segment': {
      id: '/_authenticated/users/segment'
      path: '/users/segment'
      fullPath: '/users/segment'
      preLoaderRoute: typeof AuthenticatedUsersSegmentRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/users/message': {
      id: '/_authenticated/users/message'
      path: '/users/message'
      fullPath: '/users/message'
      preLoaderRoute: typeof AuthenticatedUsersMessageRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/profile': {
      id: '/_authenticated/settings/profile'
      path: '/settings/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof AuthenticatedSettingsProfileRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/payment-methods': {
      id: '/_authenticated/settings/payment-methods'
      path: '/settings/payment-methods'
      fullPath: '/settings/payment-methods'
      preLoaderRoute: typeof AuthenticatedSettingsPaymentMethodsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/payment': {
      id: '/_authenticated/settings/payment'
      path: '/settings/payment'
      fullPath: '/settings/payment'
      preLoaderRoute: typeof AuthenticatedSettingsPaymentRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/employees': {
      id: '/_authenticated/settings/employees'
      path: '/settings/employees'
      fullPath: '/settings/employees'
      preLoaderRoute: typeof AuthenticatedSettingsEmployeesRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/deliveries': {
      id: '/_authenticated/settings/deliveries'
      path: '/settings/deliveries'
      fullPath: '/settings/deliveries'
      preLoaderRoute: typeof AuthenticatedSettingsDeliveriesRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/sales/refund': {
      id: '/_authenticated/sales/refund'
      path: '/sales/refund'
      fullPath: '/sales/refund'
      preLoaderRoute: typeof AuthenticatedSalesRefundRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/products/stock-count': {
      id: '/_authenticated/products/stock-count'
      path: '/products/stock-count'
      fullPath: '/products/stock-count'
      preLoaderRoute: typeof AuthenticatedProductsStockCountRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/products/stock': {
      id: '/_authenticated/products/stock'
      path: '/products/stock'
      fullPath: '/products/stock'
      preLoaderRoute: typeof AuthenticatedProductsStockRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthForgotRoute: typeof AuthForgotRoute
  AuthNewPasswordRoute: typeof AuthNewPasswordRoute
  AuthOtpRoute: typeof AuthOtpRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthForgotRoute: AuthForgotRoute,
  AuthNewPasswordRoute: AuthNewPasswordRoute,
  AuthOtpRoute: AuthOtpRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface AuthenticatedRouteRouteChildren {
  AuthenticatedBranchesRoute: typeof AuthenticatedBranchesRoute
  AuthenticatedDiscountsRoute: typeof AuthenticatedDiscountsRoute
  AuthenticatedReportsRoute: typeof AuthenticatedReportsRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedProductsStockRoute: typeof AuthenticatedProductsStockRoute
  AuthenticatedProductsStockCountRoute: typeof AuthenticatedProductsStockCountRoute
  AuthenticatedSalesRefundRoute: typeof AuthenticatedSalesRefundRoute
  AuthenticatedSettingsDeliveriesRoute: typeof AuthenticatedSettingsDeliveriesRoute
  AuthenticatedSettingsEmployeesRoute: typeof AuthenticatedSettingsEmployeesRoute
  AuthenticatedSettingsPaymentRoute: typeof AuthenticatedSettingsPaymentRoute
  AuthenticatedSettingsPaymentMethodsRoute: typeof AuthenticatedSettingsPaymentMethodsRoute
  AuthenticatedSettingsProfileRoute: typeof AuthenticatedSettingsProfileRoute
  AuthenticatedUsersMessageRoute: typeof AuthenticatedUsersMessageRoute
  AuthenticatedUsersSegmentRoute: typeof AuthenticatedUsersSegmentRoute
  AuthenticatedProductsIndexRoute: typeof AuthenticatedProductsIndexRoute
  AuthenticatedSalesIndexRoute: typeof AuthenticatedSalesIndexRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedBranchesRoute: AuthenticatedBranchesRoute,
  AuthenticatedDiscountsRoute: AuthenticatedDiscountsRoute,
  AuthenticatedReportsRoute: AuthenticatedReportsRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedProductsStockRoute: AuthenticatedProductsStockRoute,
  AuthenticatedProductsStockCountRoute: AuthenticatedProductsStockCountRoute,
  AuthenticatedSalesRefundRoute: AuthenticatedSalesRefundRoute,
  AuthenticatedSettingsDeliveriesRoute: AuthenticatedSettingsDeliveriesRoute,
  AuthenticatedSettingsEmployeesRoute: AuthenticatedSettingsEmployeesRoute,
  AuthenticatedSettingsPaymentRoute: AuthenticatedSettingsPaymentRoute,
  AuthenticatedSettingsPaymentMethodsRoute:
    AuthenticatedSettingsPaymentMethodsRoute,
  AuthenticatedSettingsProfileRoute: AuthenticatedSettingsProfileRoute,
  AuthenticatedUsersMessageRoute: AuthenticatedUsersMessageRoute,
  AuthenticatedUsersSegmentRoute: AuthenticatedUsersSegmentRoute,
  AuthenticatedProductsIndexRoute: AuthenticatedProductsIndexRoute,
  AuthenticatedSalesIndexRoute: AuthenticatedSalesIndexRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  publicHelpRoute: publicHelpRoute,
  publicPrivacyRoute: publicPrivacyRoute,
  publicTermsRoute: publicTermsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
